#
# udb.icn- main udb Console Session, 
# latter will handle both Console and GUI Interface through 
# a command line options
# Author  : Ziad Al-Sharif
# e-mail  : zsharif@gmail.com
#

$include "defaults.icn"
import json

procedure main(argv)
   local udb, res := "reset", sock, progSock

   if not (&features == "multiple programs") then
      stop("udb requires multiple programs feature to be enabled.")

   if argv[1] == "-adapter" then {
      trap("SIGTERM", sig_ignore)
      &error := -1
      sock := connect_sock(argv[2])
   }

   trap("SIGINT",  sig_ignore)
   trap("SIGPIPE", sig_ignore)

   while res == "reset" do {
      res := ""
      &eventsource := &null
      tempargv := copy(argv)

      if argv[1] == "-adapter" then {
         if \progSock then close(progSock)
         progSock := connect_sock(argv[2] + 10)
      }

      udb := Console()
      res := udb.startConsole(tempargv, sock, progSock)
   }

   write("\n   Thank you for using UDB.\n   Goodbye !!!")
end

procedure connect_sock(port)
   local sock
   if /port then stop("No port declared")
   port := (if &features == "MacOS" then "127.0.0.1" else "") || ":" || port

   every 1 to 5 do {
      if sock := open(port, "n") then {
         write("udb open(",port,") SUCCESS")
         break
      }
      else {
         write("udb open(",port,") ERROR: ", &errortext)
         delay(1000)
      }
   }
   if /sock then stop("udb failed to connect to port: ",port)

   return sock
end

procedure sig_ignore(non)
  writes("\r")
  write(PROMPT || "Quit")
  writes(PROMPT)
end

