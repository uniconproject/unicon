global gsum, usermode
procedure main(argv)
   gsum:=0
   thrd := []

   if *argv>0 then{
      n:=integer(argv[1]) | stop ("arg must be integer")
      usermode := 1
      }
    else
      n:=4

   x := 10^7
   d:= x / n

   write(n , " thread(s) will sum ", x, " ones.")
   write("The work will be divided equally between them. Please wait... ")

   t:=&now
   every i:=!n do put(thrd, thread suma(d))
   every wait(!thrd)

   # print the sum. (x-d*n) is just an error correction when using "odd" # of threads.
   write("sum=",gsum+(x-d*n))
   
   if (\usermode) then
      write("time:", &now-t, " seconds")
end

procedure suma(n)
   local sum:=0
   static region
   initial  region := mutex() 

   every !n do sum+:=1

   critical region:  gsum +:= sum

   if (\usermode) then
      write("Thread ", serial() , " is done")
end

