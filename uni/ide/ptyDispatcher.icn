# ptyDispatcher.icn
# benjamin Jeffery
# 09/03/2013
# sources: Clinton Jeffery, Robert Partlett
# a subclass of Dispatcher with pseudo tty support
# needed for debugger integration

import gui
$include "keysyms.icn"
$include "guih.icn"


class ptyDispatcher : Dispatcher (ptys, connections) 

   method add_pty (n)
      insert(ptys, n)
      if not (!connections === n) then put(connections, n)
   end

      #
   # Loop until dialog r is closed processing events and tickers.  If r
   # is omitted, then loop until there are no open dialogs.
   # this is a replacement method
   # @p
   method message_loop(r)
      local L, x, dialogwins

      idle_sleep := 3
      dialogwins := set()
 
      while \r.is_open do {
         connections := []
         every insert(dialogwins, (!dialogs).win)
         every put(connections, !dialogwins | !ptys)
         
	 if *(L := select(connections,1)) > 0 then {
	    every x := !L do {
               if member(dialogwins, x) then {
		  do_event()
                  break next
                  }
               else if member(ptys, x) then {
	          ide.do_pty_event()
		  break next
	          }
               }
            }
         else {
            do_validate() | do_ticker() | delay(idle_sleep)
         }
      }
   end

 
   initially ()
      self$Dispatcher.initially()
      ptys := set()
      connections := []
      
end
 


