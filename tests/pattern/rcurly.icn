## rcurly.icn
## Paden Rumsey
## July 31, 2016

## Tests the curly brace notation in regular expressions. Mixes some complex
## patterns and csets to set parenthetical grouping. Images included.
##

procedure main()
    while s := read() do {
	write("Curly Brace Alternation with Strings")
	regx := <"l"{2} | "s"{2}>
	write(image(regx))
	match_string(s, regx)


	write("Curly Braces with Csets")
	regx := <[l]{2} | [s]{2}>
	write(image(regx))
	match_string(s, regx)

	write(" Curly Brace Alternation with Parenthesis")
	regx := <([l]){2} | ([s]{2})>
	write(image(regx))
	match_string(s, regx)

	write("Curly Brace Concatenation")
	regx := <[i] [l]{2}>
	write(image(regx))
	match_string(s, regx)
	
	write("Curly Braces Used on Semi-Complex Pattern")
	regx := <[w]."l"{2}>
	write(image(regx))
	match_string(s, regx)
	
	write("Curly Braces Used on Semi-Complex Pattern with Parens")
	regx := <([w]."l"){2}>
	write(image(regx))
	match_string(s, regx)

    }

end

procedure match_string(s, r)
    r := r -> out || Rem() -> remain
    write("The string is: ", s)
    if s ?? r then {
	write("The matched string is ", out, " the remainder is ", remain)
	}
    else
	write("The regex failed to match")
    write("\n")
end
