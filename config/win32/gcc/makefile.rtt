include ../../makedefs

CFLAGS= $(ISFLAG) -I../gdbm -I../libtp -DRttx -DRTT -DTokDotH=\"../rtt/ltoken.h\" -DNTConsole
HFLAGS=
LDFLAGS= $(ISFLAG)
LIBS=
YFLAGS=

ROBJS = rttparse.$(O) rttmain.$(O) rttlex.$(O) rttsym.$(O) rttnode.$(O) rttout.$(O) rttmisc.$(O)\
	  rttdb.$(O) rttinlin.$(O) rttilc.$(O) yyerror.$(O)

PP_DIR = ../preproc/
P_DOT_H = $(PP_DIR)preproc.h $(PP_DIR)pproto.h ltoken.h ../h/mproto.h\
        ../h/define.h ../h/config.h ../h/typedefs.h ../h/proto.h\
        ../h/cstructs.h ../h/cpuconf.h
POBJS = pout.$(O) pchars.$(O)  perr.$(O) pmem.$(O)  bldtok.$(O) macro.$(O) preproc.$(O)\
	evaluate.$(O) files.$(O) gettok.$(O) pinit.$(O)

COBJS = ../common/getopt.$(O) ../common/time.$(O) ../common/filepart.$(O)\
	  ../common/identify.$(O) ../common/strtbl.$(O)\
	  ../common/rtdb.$(O) ../common/mlocal.$(O) ../common/literals.$(O) \
	  ../common/alloc.$(O)

ICOBJS=	getopt.$(O) time.$(O) filepart.$(O) identify.$(O) strtbl.$(O) rtdb.$(O)\
	  mlocal.$(O) literals.$(O) alloc.$(O)

OBJ = $(ROBJS) $(POBJS) $(COBJS)

CONSOLE=NTConsole

all: $(COBJ) rtt

rtt:	$(OBJ)
	$(CC) $(CFLAGS) -DNTConsole -DWIN32 -c rttmain.c
	$(CC) $(LDFLAGS) -o rtt.exe $(OBJ)
	$(COPY) rtt.exe ../../bin

library:	$(OBJ)
		rm -rf rtt.a
		ar qc rtt.a $(OBJ)
		-(test -f ../../NoRanlib) || (ranlib rtt.a)

$(ROBJS): rtt.h rtt1.h rttproto.h $(P_DOT_H)

rttdb.$(O): ../h/version.h
rttparse.$(O) : ../h/gsupport.h ../h/path.h ../h/config.h ../h/cstructs.h \
	../h/proto.h ../h/typedefs.h ../h/cpuconf.h ../h/define.h
rttmain.$(O) : ../h/path.h

pout.$(O): $(PP_DIR)pout.c $(P_DOT_H)
	$(CC) -c $(CFLAGS) $(PP_DIR)pout.c 

pchars.$(O): $(PP_DIR)pchars.c $(P_DOT_H)
	$(CC) -c $(CFLAGS) $(PP_DIR)pchars.c 

perr.$(O): $(PP_DIR)perr.c $(P_DOT_H)
	$(CC) -c $(CFLAGS) $(PP_DIR)perr.c

pmem.$(O): $(PP_DIR)pmem.c $(P_DOT_H)
	$(CC) -c $(CFLAGS) $(PP_DIR)pmem.c

bldtok.$(O): $(PP_DIR)bldtok.c $(P_DOT_H)
	$(CC) -c $(CFLAGS) $(PP_DIR)bldtok.c

macro.$(O): $(PP_DIR)macro.c $(P_DOT_H)
	$(CC) -c $(CFLAGS) $(PP_DIR)macro.c

preproc.$(O): $(PP_DIR)preproc.c $(P_DOT_H)
	$(CC) -c $(CFLAGS) $(PP_DIR)preproc.c

evaluate.$(O): $(PP_DIR)evaluate.c $(P_DOT_H)
	$(CC) -c $(CFLAGS) $(PP_DIR)evaluate.c

files.$(O): $(PP_DIR)files.c $(P_DOT_H)
	$(CC) -c $(CFLAGS) $(PP_DIR)files.c

gettok.$(O): $(PP_DIR)gettok.c $(P_DOT_H)
	$(CC) -c $(CFLAGS) $(PP_DIR)gettok.c

pinit.$(O): $(PP_DIR)pinit.c $(P_DOT_H)
	$(CC) -c $(CFLAGS) $(PP_DIR)pinit.c

#
# The following entry is commented out because it is not normally
# necessary to recreate rttparse.c and ltoken.h unless the grammar
# in rttgram.y for the run-time langauge is changed. Recreating these
# files is not normally a part of the installation process. Note that
# on some systems, yacc may not have large enough internal tables to
# translate this grammar.
#
#rttparse.c ltoken.h: rttgram.y
#	yacc -d $(YFLAGS) rttgram.y
#	fgrep -v -x "extern char *malloc(), *realloc();" y.tab.c > rttparse.c
#	rm y.tab.c
#	mv y.tab.h ltoken.h
