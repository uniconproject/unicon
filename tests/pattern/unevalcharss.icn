## unevalcharss.icn
## Paden Rumsey
## July 8, 2016

## Unit Tests for pattern functions that take a character as an argument
## This tests all the possible (correct) types of input that a
## function could take

procedure main()
    c := charfunc()
    count := 1
    x := 'a'
    while s := read() do {

	if count = 2 then {
	    c.var := 'b'
	    x := 'b'
	    }
	else if count = 3 then {
	    c.var := 'c'
	    x := 'c'
	    }

	p := Any(x)
	s ?? p -> out
	write(out)
	p := Any(`fcall(x)`)
	s ?? p -> out
	write(out)
	p := Any(`c.charreturn(x)`)
	s ?? p -> out
	write(out)
	p := Any(`c.var`)
	s ?? p -> out
	write(out)
	p := Any(`x`)
	s ?? p -> out
	write(out)
	
	p := Break(x)
	s ?? p -> out
	write(out)
	p := Break(`fcall(x)`)
	s ?? p -> out
	write(out)
	p := Break(`c.charreturn(x)`)
	s ?? p -> out
	write(out)
	p := Break(`c.var`)
	s ?? p -> out
	write(out)
	p := Break(`x`)
	s ?? p -> out
	write(out)

	p := Breakx(x)
	s ?? p -> out
	write(out)
	p := Breakx(`fcall(x)`)
	s ?? p -> out
	write(out)
	p := Breakx(`c.charreturn(x)`)
	s ?? p -> out
	write(out)
	p := Breakx(`c.var`)
	s ?? p -> out
	write(out)
        p := Breakx(`x`)
	s ?? p -> out
	write(out)
	
	p := NotAny(x)
	s ?? p -> out
	write(out)
	p := NotAny(`fcall(x)`)
	s ?? p -> out
	write(out)
	p := NotAny(`c.charreturn(x)`)
	s ?? p -> out
	write(out)
	p := NotAny(`c.var`)
	s ?? p -> out
	write(out)
	p := NotAny(`x`)
	s ?? p -> out
	write(out)
	
	p := Span(x)
	s ?? p -> out
	write(out)
	p := Span(`fcall(x)`)
	s ?? p -> out
	write(out)
	p := Span(`c.charreturn(x)`)
	s ?? p -> out
	write(out)
	p := Span(`c.var`)
	s ?? p -> out
	write(out)
	p := Span(`x`)
	s ?? p -> out
	write(out)

	p := Nspan(x)
	s ?? p -> out
	write(out)
	p := Nspan(`fcall(x)`)
	s ?? p -> out
	write(out)
	p := Nspan(`c.charreturn(x)`)
	s ?? p -> out
	write(out)
	p := Nspan(`c.var`)
	s ?? p -> out
	write(out)
	p := Nspan(`x`)
	s ?? p -> out
	write(out)

	count +:= 1
    }
end

procedure fcall(param)
    if      param == 'a' then return 'a'
    else if param == 'b' then return 'b'
    else if param == 'c' then return 'c' 
end

class charfunc(var)

method charreturn(param)
    if      param == 'a' then return 'a'
    else if param == 'b' then return 'b'
    else if param == 'c' then return 'c' 
end

initially()
   var := 'a'
end
