#
# Long run program that is garbage collection intensive
#

global gsum
procedure main(argv)
   if not (&features == "concurrent threads") then
      stop("This program requires concurrent threads.")

   gsum := 0
   thrd := []

   if *argv>0 then
      n := integer(argv[1]) | stop ("arg must be integer")
   else
      n := 4

   x := 10^6
   d:= x / n

   write("running ", n , " thread(s) please wait... ")
   t := &now
   every i := !n do put(thrd, create suma(d, i ))
   every spawn(!thrd, 1M, 100K)
   every wait(!thrd)

   write("sum=",gsum+(x-d*n))
   # given the block size we use, we should get ~199 GC
   write("garbage collection =",
         if 190 < &collections < 210 then "OK" else &collections)
end


procedure suma(n, id)
   local sum := 0, L, T, S
   static region
   initial region := mutex()

   every i := 1 to n do {
      sum +:= 1
      if i%100 = 1  then {
         L := []
         T := table()
         S := set()
         }

      put(L, i)
      T[i] := sum
      insert(S, i, sum)
      }

   critical region: gsum +:= sum
end
